{"version":3,"sources":["components/snow/Snow.js","components/burgerMenu/BurgerMenuItem.js","components/burgerMenu/BurgerMenu.js","redux/types.js","redux/actions.js","components/iconState/IconMode.js","components/iconState/IconEffect.js","components/search/Search.js","views/Home.js","router/Router.js","App.js","redux/effect/effectReducer.js","redux/theme/themeReducer.js","redux/rootReducer.js","index.js"],"names":["Snow","content","i","size","Math","floor","random","blur","snow_container_style","left","animationDuration","animationDelay","filter","snow_style","width","height","push","className","style","BurgerMenuItem","props","menuItems","map","item","text","change","id","BurgerMenu","useState","open","setOpen","time","setTime","checkTime","value","timeNow","Date","getTime","onOutsideClick","onClick","mode","CHANGE_THEME","CHANGE_EFFECT","changeEffect","type","IconMode","dispatch","useDispatch","animPath","useSpring","d","fill","animSvg","delay","transform","svg","xmlns","x","y","viewBox","path","IconEffect","useEffect","window","visualViewport","setTimeout","version","effect","transition","transitionProperty","cx","cy","r","Search","setText","input","setInput","handleClick","e","code","location","href","icon","faSearch","placeholder","name","onChange","target","onKeyPress","faTimes","Home","useSelector","state","theme","light","snow","Router","exact","component","App","initialState","rootReducer","combineReducers","action","store","createStore","compose","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","basename","process","document","getElementById"],"mappings":"qOA8CeA,MA5Cf,WAkBE,IAjBA,IAeIC,EAAU,GAELC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIC,EAAOC,KAAKC,MAlBF,EAkBkB,EAAAD,KAAKE,UACjCC,EAAOH,KAAKC,MAPF,EAOkB,EAAAD,KAAKE,UAE/BE,EAAuB,CAC3BC,KAAML,KAAKC,MAnBA,EAmBe,GAAAD,KAAKE,UAAgC,IAC/DI,kBAAmBN,KAAKC,MAjBR,GAiB4B,EAAAD,KAAKE,UAA0C,IAC3FK,eAAgBP,KAAKC,MAfR,EAeyB,GAAAD,KAAKE,UAAoC,IAC/EM,OAAO,QAAD,OAAUL,EAAV,QAGFM,EAAa,CACjBC,MAAOX,EAAO,KACdY,OAAQZ,EAAO,MAGjBF,EAAQe,KACN,qBAAaC,UAAU,iBAAiBC,MAAOV,EAA/C,SACE,qBAAKS,UAAU,OAAOC,MAAOL,KADrBX,IAMd,OAAOD,G,+BC5BMkB,MAbf,SAAwBC,GACtB,OACE,qBAAKH,UAAU,4BAAf,SACGG,EAAMC,UAAUC,KAAI,SAACC,GAAD,OACnB,sBAAmBN,UAAU,uBAA7B,UACE,qBAAKA,UAAU,uBAAf,SAAuCM,EAAKC,OAC5C,qBAAKP,UAAU,yBAAf,SAAyCM,EAAKE,WAFtCF,EAAKG,U,iBCkDRC,MApDf,SAAoBP,GAAQ,IAAD,EACDQ,oBAAS,GADR,mBAClBC,EADkB,KACZC,EADY,OAEDF,mBAAS,MAFR,mBAElBG,EAFkB,KAEZC,EAFY,KAIzB,SAASC,EAAUC,GACjB,IAAIC,GAAU,IAAIC,MAAOC,UAGrBN,EAAO,IAAMI,IAAqB,IAAVD,GAC1BF,EAAQG,GACRL,GAASD,IACAE,EAAO,IAAMI,IAAqB,IAAVD,GACjCJ,EAAQI,GAIZ,OACE,qBAAKjB,UAAU,aAAf,SACE,eAAC,IAAD,CAAqBqB,eAAgB,kBAAML,GAAU,IAArD,UACE,qBAAKhB,UAAU,wBAAwBsB,QAASN,EAAhD,SACE,qBACEhB,UACEY,EACIT,EAAMoB,KACJ,iDACA,4EACFpB,EAAMoB,KACN,uBACA,kDARR,SAWE,0BAGJ,qBACEvB,UACEY,EACIT,EAAMoB,KACJ,+CACA,yEACFpB,EAAMoB,KACN,sBACA,gDARR,SAWE,cAAC,EAAD,CAAgBnB,UAAWD,EAAMC,oBCjD9BoB,EAAe,mBACfC,EAAgB,oBCOtB,SAASC,IACd,MAAO,CACLC,KAAMF,G,YCwCKG,MA7Cf,SAAkBzB,GAAQ,IAAD,EACCQ,mBAAS,MADV,mBAChBG,EADgB,KACVC,EADU,KAEjBc,EAAWC,cAEXC,EAAWC,YAAU,CACzBC,EAAG9B,EAAMoB,KACL,+GACA,uGACJW,KAAM/B,EAAMoB,KAAO,UAAY,YAG3BY,EAAUH,YAAU,CACxBI,MAAOjC,EAAMoB,KAAO,IAAM,IAC1Bc,UAAWlC,EAAMoB,KAAO,eAAiB,mBAG3C,SAASP,IACP,IAAIE,GAAU,IAAIC,MAAOC,UAErBN,EAAO,IAAOI,IAChBH,EAAQG,GACRW,EDvBG,CACLF,KAAMH,KC0BR,OACE,qBAAKxB,UAAU,WAAf,SACE,cAAC,IAASsC,IAAV,CACEtC,UAAU,WACVuC,MAAM,6BACNC,EAAE,MACFC,EAAE,MACF5C,MAAM,QACNC,OAAO,QACP4C,QAAQ,kBACRR,KAAK,OACLZ,QAAS,kBAAMN,KACff,MAAOkC,EAVT,SAYE,cAAC,IAASQ,KAAV,CAAeV,EAAGF,EAASE,EAAGC,KAAMH,EAASG,YCMtCU,MA9Cf,SAAoBzC,GAAQ,IAAD,EACDQ,mBAAS,MADR,mBAClBG,EADkB,KACZC,EADY,KAInBc,EAAWC,cAkBjB,OAPAe,qBAAU,WACJC,OAAOC,eAAelD,MAAQ,MAChCmD,YAAW,kBAAMnB,EAASH,UAE3B,IAID,qBAAK1B,UAAU,aAAf,SACE,sBAAKiD,QAAQ,MAAMV,MAAM,6BAA6B1C,MAAM,KAAKC,OAAO,KAAK4C,QAAQ,YAAYpB,QAlBrG,WACE,IAAIJ,GAAU,IAAIC,MAAOC,UAErBN,EAAO,IAAMI,IACfH,EAAQG,GACRW,EAASH,OAaT,UACE,sBACE1B,UAAU,MACVkC,KAAM/B,EAAM+C,OAzBJ,UACC,UAyBTjD,MAAO,CAAEkD,WAAY,MAAOC,mBAAoB,QAChDnB,EAAE,+IAIJ,wBACEjC,UAAU,MACVqD,GAAIlD,EAAM+C,OAAS,OAAS,OAC5BI,GAAG,IACHC,EAAE,OACFrB,KAAK,QACLjC,MAAO,CAAEkD,WAAY,MAAOC,mBAAoB,cCmB3CI,MAvDf,SAAgBrD,GAAQ,IAAD,EACGQ,mBAAS,IADZ,mBACdJ,EADc,KACRkD,EADQ,OAEK9C,oBAAS,GAFd,mBAEd+C,EAFc,KAEPC,EAFO,KAIfvD,EAAY,CAChB,CAAEK,GAAI,EAAGF,KAAM,QAASC,OAAQ,cAAC,EAAD,CAAUe,KAAMpB,EAAMoB,QACtD,CAAEd,GAAI,EAAGF,KAAM,UAAWC,OAAQ,cAAC,EAAD,CAAY0C,OAAQ/C,EAAM+C,WAG9D,SAASU,EAAYC,GAGP,UAFFA,EAAEC,MAEsB,UAAXD,EAAElC,OACV,KAATpB,EACFuC,OAAOiB,SAASC,KAAO,mCAAqCzD,EAE5DoD,GAAS,IAIf,OACE,sBAAK3D,UAAWG,EAAMoB,KAAO,oBAAsB,4CAAnD,UACE,qBAAKvB,UAAU,eAAesB,QAASsC,EAAvC,SACE,cAAC,IAAD,CAAiBK,KAAMC,QAGzB,uBACEC,YAAY,qBACZnE,UACE0D,EACIvD,EAAMoB,KACJ,oCACA,wDACFpB,EAAMoB,KACJ,gBACA,oCAERI,KAAK,OACLyC,KAAK,MACLnD,MAAOV,EACP8D,SAAU,SAACR,GACTJ,EAAQI,EAAES,OAAOrD,OACjB0C,GAAS,IAEXY,WAAYX,IAGd,qBAAK5D,UAAoB,KAATO,EAAc,wCAA0C,gBAAiBe,QAAS,kBAAMmC,EAAQ,KAAhH,SACE,cAAC,IAAD,CAAiBQ,KAAMO,QAEzB,cAAC,EAAD,CAAYpE,UAAWA,EAAWmB,KAAMpB,EAAMoB,WC/BrCkD,MArBf,WACE,IAAMlD,EAAOmD,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMC,SAC1C3B,EAASwB,aAAY,SAACC,GAAD,OAAWA,EAAMzB,OAAO4B,QAEnD,OACE,qBAAK9E,UAAWuB,EAAO,YAAc,4BAArC,SACE,sBAAKvB,UAAU,SAAf,UACE,oBACEA,UACEuB,EAAO,gBAAkB,oCAF7B,oBAQA,cAAC,EAAD,CAAQA,KAAMA,EAAM2B,OAAQA,UCRrB6B,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOpC,KAAK,IAAIqC,OAAK,EAACC,UAAWR,OCUxBS,MAXf,WACE,IAAMP,EAAQD,aAAY,SAAAC,GAAK,OAAIA,EAAMzB,OAAO4B,QAEhD,OACE,sBAAK9E,UAAU,UAAf,UACE,cAAC,EAAD,IACC2E,EAAQ,cAAC,EAAD,IAAW,O,gCCVpBQ,EAAe,CACnBL,MAAM,GCDFK,EAAe,CACnBN,OAAO,GCCIO,EAAcC,YAAgB,CACzCT,MDC0B,WAAmC,IAAlCD,EAAiC,uDAAzBQ,EAAcG,EAAW,uCAC5D,OAAQA,EAAO3D,MACb,KAAKH,EACH,OAAO,2BAAImD,GAAX,IAAkBE,OAAQF,EAAME,QAClC,QACE,OAAOF,ICLXzB,OFA2B,WAAmC,IAAlCyB,EAAiC,uDAAzBQ,EAAcG,EAAW,uCAC7D,OAAQA,EAAO3D,MACb,KAAKF,EACH,OAAO,2BAAIkD,GAAX,IAAkBG,MAAOH,EAAMG,OACjC,QACE,OAAOH,MGDPY,EAAQC,YAAYJ,EAAaK,YACrC3C,OAAO4C,8BAAgC5C,OAAO4C,iCAGhDC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAeM,SAAUC,cAAzB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.8b05018d.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Snow() {\r\n  const sizeMin = 4;\r\n  const sizeMax = 8;\r\n\r\n  const posMin = 1;\r\n  const posMax = 99;\r\n\r\n  const durationMin = 10;\r\n  const durationMax = 15;\r\n\r\n  const delayMin = 0;\r\n  const delayMax = 10;\r\n\r\n  const blurMin = 1;\r\n  const blurMax = 3;\r\n\r\n  let content = [];\r\n\r\n  for (let i = 0; i < 50; i++) {\r\n    let size = Math.floor(sizeMin + Math.random() * (sizeMax - sizeMin));\r\n    let blur = Math.floor(blurMin + Math.random() * (blurMax - blurMin));\r\n\r\n    const snow_container_style = {\r\n      left: Math.floor(posMin + Math.random() * (posMax - posMin)) + \"%\",\r\n      animationDuration: Math.floor(durationMin + Math.random() * (durationMax - durationMin)) + \"s\",\r\n      animationDelay: Math.floor(delayMin + Math.random() * (delayMax - delayMin)) + \"s\",\r\n      filter: `blur(${blur}px)`,\r\n    };\r\n\r\n    const snow_style = {\r\n      width: size + \"px\",\r\n      height: size + \"px\",\r\n    };\r\n\r\n    content.push(\r\n      <div key={i} className=\"snow_container\" style={snow_container_style}>\r\n        <div className=\"snow\" style={snow_style}></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\nexport default Snow;\r\n","import React from \"react\";\r\n\r\nfunction BurgerMenuItem(props) {\r\n  return (\r\n    <div className=\"burgerMenuItem__container\">\r\n      {props.menuItems.map((item) => (\r\n        <div key={item.id} className=\"burgerMenuItem__item\">\r\n          <div className='burgerMenuItem__text'>{item.text}</div>\r\n          <div className='burgerMenuItem__change'>{item.change}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerMenuItem;\r\n","import React, { useState } from \"react\";\r\nimport BurgerMenuItem from \"./BurgerMenuItem\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\n\r\nfunction BurgerMenu(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [time, setTime] = useState(null);\r\n\r\n  function checkTime(value) {\r\n    let timeNow = new Date().getTime();\r\n\r\n    // Delay for changing object state\r\n    if (time + 500 < timeNow && value !== false) {\r\n      setTime(timeNow);\r\n      setOpen(!open);\r\n    } else if (time + 500 < timeNow && value === false) {\r\n      setOpen(value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"burgerMenu\">\r\n      <OutsideClickHandler onOutsideClick={() => checkTime(false)}>\r\n        <div className=\"burgerMenu__container\" onClick={checkTime}>\r\n          <div\r\n            className={\r\n              open\r\n                ? props.mode\r\n                  ? \"burgerMenu__switcher burgerMenu__switcher_open\"\r\n                  : \"burgerMenu__switcher burgerMenu__switcher_night burgerMenu__switcher_open\"\r\n                : props.mode\r\n                ? \"burgerMenu__switcher\"\r\n                : \"burgerMenu__switcher burgerMenu__switcher_night\"\r\n            }\r\n          >\r\n            <i></i>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            open\r\n              ? props.mode\r\n                ? \"burgerMenu__content burgerMenu__content_open\"\r\n                : \"burgerMenu__content burgerMenu__content_night burgerMenu__content_open\"\r\n              : props.mode\r\n              ? \"burgerMenu__content\"\r\n              : \"burgerMenu__content burgerMenu__content_night\"\r\n          }\r\n        >\r\n          <BurgerMenuItem menuItems={props.menuItems} />\r\n        </div>\r\n      </OutsideClickHandler>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerMenu;\r\n","export const CHANGE_THEME = 'APP/CHANGE_THEME'\r\nexport const CHANGE_EFFECT = 'APP/CHANGE_EFFECT'","import { CHANGE_EFFECT, CHANGE_THEME } from './types'\r\n\r\nexport function changeTheme() {\r\n  return {\r\n    type: CHANGE_THEME,\r\n  }\r\n}\r\n\r\nexport function changeEffect() {\r\n  return {\r\n    type: CHANGE_EFFECT,\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeTheme } from \"../../redux/actions\";\r\nimport { animated, useSpring } from \"react-spring\";\r\n\r\nfunction IconMode(props) {\r\n  const [time, setTime] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const animPath = useSpring({\r\n    d: props.mode\r\n      ? \"M12 6C12 9.31371 9.31371 12 6 12C2.68629 12 0 9.31371 0 6C0 2.68629 2.68629 0 6 0C9.31371 0 12 2.68629 12 6Z\"\r\n      : \"M3.5 6C3.5 9.31371 6 12 6 12C2.68629 12 0 9.31371 0 6C0 2.68629 2.68629 0 6 0C6 0 3.5 2.68629 3.5 6Z\",\r\n    fill: props.mode ? '#ffdd00' : '#663ecf'\r\n  });\r\n\r\n  const animSvg = useSpring({\r\n    delay: props.mode ? 700 : 300,\r\n    transform: props.mode ? 'rotate(0deg)' : 'rotate(320deg)',\r\n  })\r\n\r\n  function checkTime() {\r\n    let timeNow = new Date().getTime();\r\n\r\n    if (time + 1000 < timeNow) {\r\n      setTime(timeNow);\r\n      dispatch(changeTheme());\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"iconMode\">\r\n      <animated.svg\r\n        className=\"iconMode\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        x=\"0px\"\r\n        y=\"0px\"\r\n        width=\"200px\"\r\n        height=\"200px\"\r\n        viewBox=\"-0.5 -0.5 13 13\"\r\n        fill=\"none\"\r\n        onClick={() => checkTime()}\r\n        style={animSvg}\r\n      >\r\n        <animated.path d={animPath.d} fill={animPath.fill} />\r\n      </animated.svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IconMode;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeEffect } from \"../../redux/actions\";\r\n\r\nfunction IconEffect(props) {\r\n  const [time, setTime] = useState(null);\r\n  const colorOn = \"#4CD964\";\r\n  const colorOff = \"#a3a3a3\";\r\n  const dispatch = useDispatch()\r\n\r\n  function checkTime() {\r\n    let timeNow = new Date().getTime();\r\n\r\n    if (time + 500 < timeNow) {\r\n      setTime(timeNow);\r\n      dispatch(changeEffect())\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (window.visualViewport.width < 1030) {\r\n      setTimeout(() => dispatch(changeEffect()))\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className='iconEffect'>\r\n      <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 12 12\" onClick={checkTime}>\r\n        <path\r\n          className=\"st1\"\r\n          fill={props.effect ? colorOn : colorOff}\r\n          style={{ transition: \".5s\", transitionProperty: 'fill'}}\r\n          d=\"M9.06,8.74H2.94C1.43,8.74,0.2,7.51,0.2,6v0c0-1.51,1.23-2.74,2.74-2.74h6.12c1.51,0,2.74,1.23,2.74,2.74v0\r\n        C11.8,7.51,10.57,8.74,9.06,8.74z\"\r\n        />\r\n\r\n        <circle\r\n          className=\"st0\"\r\n          cx={props.effect ? \"9.06\" : \"2.94\"}\r\n          cy=\"6\"\r\n          r=\"2.35\"\r\n          fill=\"white\"\r\n          style={{ transition: \".5s\", transitionProperty: 'cx'}}\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IconEffect;","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport BurgerMenu from \"../burgerMenu/BurgerMenu\";\r\nimport IconMode from '../iconState/IconMode'\r\nimport IconEffect from \"../iconState/IconEffect\";\r\n\r\nfunction Search(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const [input, setInput] = useState(false)\r\n  \r\n  const menuItems = [\r\n    { id: 1, text: 'Theme', change: <IconMode mode={props.mode}/> },\r\n    { id: 2, text: 'Effects', change: <IconEffect effect={props.effect}/> },\r\n  ]\r\n\r\n  function handleClick(e) {\r\n    let key = e.code;\r\n\r\n    if (key === \"Enter\" || e.type === \"click\") {\r\n      if (text !== '')\r\n        window.location.href = \"https://www.google.com/search?q=\" + text\r\n      else\r\n        setInput(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={props.mode ? \"search__container\" : \"search__container search__container_night\"}>\r\n      <div className=\"search__icon\" onClick={handleClick}>\r\n        <FontAwesomeIcon icon={faSearch} />\r\n      </div>\r\n\r\n      <input\r\n        placeholder='Enter your request'\r\n        className={\r\n          input\r\n            ? props.mode\r\n              ? \"search__input search__input_empty\"\r\n              : \"search__input search__input_night search__input_empty\"\r\n            : props.mode\r\n              ? \"search__input\"\r\n              : \"search__input search__input_night\"\r\n            }\r\n        type=\"text\"\r\n        name=\"bar\"\r\n        value={text}\r\n        onChange={(e) => {\r\n          setText(e.target.value)\r\n          setInput(false)\r\n        }}\r\n        onKeyPress={handleClick}\r\n      />\r\n\r\n      <div className={text === '' ? 'search__cross search__cross_invisible' : 'search__cross'} onClick={() => setText('')}>\r\n        <FontAwesomeIcon icon={faTimes}/>\r\n      </div>\r\n      <BurgerMenu menuItems={menuItems} mode={props.mode}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Search from \"../components/search/Search\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nfunction Home() {\r\n  const mode = useSelector((state) => state.theme.light);\r\n  const effect = useSelector((state) => state.effect.snow);\r\n\r\n  return (\r\n    <div className={mode ? \"container\" : \"container container_night\"}>\r\n      <div className=\"search\">\r\n        <h1\r\n          className={\r\n            mode ? \"search__title\" : \"search__title search__title_night\"\r\n          }\r\n        >\r\n          Search\r\n        </h1>\r\n\r\n        <Search mode={mode} effect={effect} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"../views/Home\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Snow from \"./components/snow/Snow\";\nimport Router from \"./router/Router\";\n\nfunction App() {\n  const state = useSelector(state => state.effect.snow)\n\n  return (\n    <div className=\"wrapper\">\n      <Router />\n      {state ? <Snow /> : ''}\n    </div>\n  );\n}\n\nexport default App;\n","import { CHANGE_EFFECT } from '../types';\r\n\r\nconst initialState = {\r\n  snow: true\r\n}\r\n\r\nexport const effectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_EFFECT:\r\n      return {...state, snow: !state.snow}\r\n    default:\r\n      return state\r\n  }\r\n}","import { CHANGE_THEME } from \"../types\"\r\n\r\nconst initialState = {\r\n  light: true\r\n}\r\n\r\nexport const themeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_THEME:\r\n      return {...state, light: !state.light}\r\n    default:\r\n      return state\r\n  }\r\n};\r\n","import { combineReducers } from 'redux'\r\nimport { effectReducer } from './effect/effectReducer'\r\nimport { themeReducer } from './theme/themeReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  theme: themeReducer,\r\n  effect: effectReducer\r\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./assets/sass/all.sass\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { compose, createStore } from \"redux\";\nimport { rootReducer } from \"./redux/rootReducer\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(rootReducer, compose(\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}