{"version":3,"sources":["components/snow/Snow.js","components/burgerMenu/BurgerMenuItem.js","components/burgerMenu/BurgerMenu.js","redux/types.js","components/iconState/IconMode.js","redux/actions.js","components/iconState/IconEffect.js","components/search/Search.js","views/Home.js","router/Router.js","App.js","redux/effect/effectReducer.js","redux/theme/themeReducer.js","redux/rootReducer.js","index.js"],"names":["a","content","i","size","Math","floor","random","blur","snow_container_style","left","animationDuration","animationDelay","filter","snow_style","width","height","push","className","style","Snow","BurgerMenuItem","props","menuItems","map","item","text","change","id","BurgerMenu","useState","open","setOpen","time","setTime","checkTime","value","timeNow","Date","getTime","onOutsideClick","onClick","mode","CHANGE_THEME","CHANGE_EFFECT","IconMode","dispatch","useDispatch","viewBox","type","cx","cy","r","fill","transition","mask","transform","IconEffect","effect","transitionProperty","d","Search","setText","input","setInput","handleClick","e","code","window","location","href","icon","faSearch","placeholder","name","onChange","target","onKeyPress","faTimes","Home","useSelector","state","theme","light","snow","Router","path","exact","component","App","initialState","rootReducer","combineReducers","action","store","createStore","compose","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.052c5f47.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nasync function Snow() {\r\n  const sizeMin = 4;\r\n  const sizeMax = 8;\r\n\r\n  const posMin = 1;\r\n  const posMax = 99;\r\n\r\n  const durationMin = 10;\r\n  const durationMax = 15;\r\n\r\n  const delayMin = 0;\r\n  const delayMax = 10;\r\n\r\n  const blurMin = 1;\r\n  const blurMax = 3;\r\n\r\n  let content = [];\r\n\r\n  for (let i = 0; i < 50; i++) {\r\n    let size = Math.floor(sizeMin + Math.random() * (sizeMax - sizeMin));\r\n    let blur = Math.floor(blurMin + Math.random() * (blurMax - blurMin));\r\n\r\n    const snow_container_style = {\r\n      left: Math.floor(posMin + Math.random() * (posMax - posMin)) + \"%\",\r\n      animationDuration: Math.floor(durationMin + Math.random() * (durationMax - durationMin)) + \"s\",\r\n      animationDelay: Math.floor(delayMin + Math.random() * (delayMax - delayMin)) + \"s\",\r\n      filter: `blur(${blur}px)`,\r\n    };\r\n\r\n    const snow_style = {\r\n      width: size + \"px\",\r\n      height: size + \"px\",\r\n    };\r\n\r\n    content.push(\r\n      <div key={i} className=\"snow_container\" style={snow_container_style}>\r\n        <div className=\"snow\" style={snow_style}></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\nexport default Snow;\r\n","import React from \"react\";\r\n\r\nfunction BurgerMenuItem(props) {\r\n  return (\r\n    <div className=\"burgerMenuItem__container\">\r\n      {props.menuItems.map((item) => (\r\n        <div key={item.id} className=\"burgerMenuItem__item\">\r\n          <div className='burgerMenuItem__text'>{item.text}</div>\r\n          <div className='burgerMenuItem__change'>{item.change}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerMenuItem;\r\n","import React, { useState } from \"react\";\r\nimport BurgerMenuItem from \"./BurgerMenuItem\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\n\r\nfunction BurgerMenu(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [time, setTime] = useState(null);\r\n\r\n  function checkTime(value) {\r\n    let timeNow = new Date().getTime();\r\n\r\n    // Delay for changing object state\r\n    if (time + 500 < timeNow && value !== false) {\r\n      setTime(timeNow);\r\n      setOpen(!open);\r\n    } else if (time + 500 < timeNow && value === false) {\r\n      setOpen(value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"burgerMenu\">\r\n      <OutsideClickHandler onOutsideClick={() => checkTime(false)}>\r\n        <div className=\"burgerMenu__container\" onClick={checkTime}>\r\n          <div\r\n            className={\r\n              open\r\n                ? props.mode\r\n                  ? \"burgerMenu__switcher burgerMenu__switcher_open\"\r\n                  : \"burgerMenu__switcher burgerMenu__switcher_night burgerMenu__switcher_open\"\r\n                : props.mode\r\n                ? \"burgerMenu__switcher\"\r\n                : \"burgerMenu__switcher burgerMenu__switcher_night\"\r\n            }\r\n          >\r\n            <i></i>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            open\r\n              ? props.mode\r\n                ? \"burgerMenu__content burgerMenu__content_open\"\r\n                : \"burgerMenu__content burgerMenu__content_night burgerMenu__content_open\"\r\n              : props.mode\r\n              ? \"burgerMenu__content\"\r\n              : \"burgerMenu__content burgerMenu__content_night\"\r\n          }\r\n        >\r\n          <BurgerMenuItem menuItems={props.menuItems} />\r\n        </div>\r\n      </OutsideClickHandler>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerMenu;\r\n","export const CHANGE_THEME = 'APP/CHANGE_THEME'\r\nexport const CHANGE_EFFECT = 'APP/CHANGE_EFFECT'","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeTheme } from \"../../redux/actions\";\r\n\r\nfunction IconMode(props) {\r\n  const [time, setTime] = useState(null);\r\n  const dispatch = useDispatch()\r\n\r\n  function checkTime() {\r\n    let timeNow = new Date().getTime();\r\n\r\n    if (time + 1000 < timeNow) {\r\n      setTime(timeNow);\r\n      dispatch(changeTheme())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"iconMode\">\r\n      <svg viewBox=\"-6 -6 12 12\" onClick={checkTime}>\r\n        <defs>\r\n          <mask id=\"mood\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"5\" fill=\"white\"></circle>\r\n            <circle\r\n              cx={props.mode ? \"10\" : \"3\"}\r\n              cy=\"0\"\r\n              r=\"5\"\r\n              style={{ transition: \"1s\" }}\r\n            ></circle>\r\n          </mask>\r\n        </defs>\r\n\r\n        <circle\r\n          cx=\"0\"\r\n          cy=\"0\"\r\n          r=\"5\"\r\n          mask=\"url(#mood)\"\r\n          transform={props.mode ? \"rotate(200)\" : \"rotate(-24)\"}\r\n          fill={props.mode ? \"#fceb4e\" : \"#8d73eb\"}\r\n          style={{ transition: \"1s\" }}\r\n        ></circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IconMode;\r\n","import { CHANGE_EFFECT, CHANGE_THEME } from './types'\r\n\r\nexport function changeTheme() {\r\n  return {\r\n    type: CHANGE_THEME,\r\n  }\r\n}\r\n\r\nexport function changeEffect() {\r\n  return {\r\n    type: CHANGE_EFFECT,\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeEffect } from \"../../redux/actions\";\r\n\r\nfunction IconEffect(props) {\r\n  const [time, setTime] = useState(null);\r\n  const colorOn = \"#4CD964\";\r\n  const colorOff = \"#a3a3a3\";\r\n  const dispatch = useDispatch()\r\n\r\n  function checkTime() {\r\n    let timeNow = new Date().getTime();\r\n\r\n    if (time + 500 < timeNow) {\r\n      setTime(timeNow);\r\n      dispatch(changeEffect())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='iconEffect'>\r\n      <svg width=\"50\" height=\"50\" viewBox=\"0 0 12 12\" onClick={checkTime}>\r\n        <path\r\n          className=\"st1\"\r\n          fill={props.effect ? colorOn : colorOff}\r\n          style={{ transition: \".5s\", transitionProperty: 'fill'}}\r\n          d=\"M9.06,8.74H2.94C1.43,8.74,0.2,7.51,0.2,6v0c0-1.51,1.23-2.74,2.74-2.74h6.12c1.51,0,2.74,1.23,2.74,2.74v0\r\n        C11.8,7.51,10.57,8.74,9.06,8.74z\"\r\n        />\r\n\r\n        <circle\r\n          className=\"st0\"\r\n          cx={props.effect ? \"9.06\" : \"2.94\"}\r\n          cy=\"6\"\r\n          r=\"2.35\"\r\n          fill=\"white\"\r\n          style={{ transition: \".5s\", transitionProperty: 'cx'}}\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IconEffect;","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport BurgerMenu from \"../burgerMenu/BurgerMenu\";\r\nimport IconMode from '../iconState/IconMode'\r\nimport IconEffect from \"../iconState/IconEffect\";\r\n\r\nfunction Search(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const [input, setInput] = useState(false)\r\n  \r\n  const menuItems = [\r\n    { id: 1, text: 'Theme', change: <IconMode mode={props.mode}/> },\r\n    { id: 2, text: 'Effects', change: <IconEffect effect={props.effect}/> },\r\n  ]\r\n\r\n  function handleClick(e) {\r\n    let key = e.code;\r\n\r\n    if (key === \"Enter\" || e.type === \"click\") {\r\n      if (text !== '')\r\n        window.location.href = \"https://www.google.com/search?q=\" + text\r\n      else\r\n        setInput(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={props.mode ? \"search__container\" : \"search__container search__container_night\"}>\r\n      <div className=\"search__icon\" onClick={handleClick}>\r\n        <FontAwesomeIcon icon={faSearch} />\r\n      </div>\r\n\r\n      <input\r\n        placeholder='Enter your request'\r\n        className={\r\n          input\r\n            ? props.mode\r\n              ? \"search__input search__input_empty\"\r\n              : \"search__input search__input_night search__input_empty\"\r\n            : props.mode\r\n              ? \"search__input\"\r\n              : \"search__input search__input_night\"\r\n            }\r\n        type=\"text\"\r\n        name=\"bar\"\r\n        value={text}\r\n        onChange={(e) => {\r\n          setText(e.target.value)\r\n          setInput(false)\r\n        }}\r\n        onKeyPress={handleClick}\r\n      />\r\n\r\n      <div className={text === '' ? 'search__cross search__cross_invisible' : 'search__cross'} onClick={() => setText('')}>\r\n        <FontAwesomeIcon icon={faTimes}/>\r\n      </div>\r\n      <BurgerMenu menuItems={menuItems} mode={props.mode}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Search from \"../components/search/Search\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Home() {\r\n  const mode = useSelector(state => state.theme.light)\r\n  const effect = useSelector(state => state.effect.snow)\r\n\r\n  return (\r\n    <div className={mode ? 'container' : 'container container_night'}>\r\n      <div className=\"search\">\r\n        <h1 className={mode ? 'search__title' : 'search__title search__title_night'}>Search</h1>\r\n        <Search  mode={mode} effect={effect} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"../views/Home\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Snow from \"./components/snow/Snow\";\nimport Router from \"./router/Router\";\n\nfunction App() {\n  const state = useSelector(state => state.effect.snow)\n\n  return (\n    <div className=\"wrapper\">\n      <Router />\n      {state ? <Snow /> : ''}\n    </div>\n  );\n}\n\nexport default App;\n","import { CHANGE_EFFECT } from '../types';\r\n\r\nconst initialState = {\r\n  snow: true\r\n}\r\n\r\nexport const effectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_EFFECT:\r\n      return {...state, snow: !state.snow}\r\n    default:\r\n      return state\r\n  }\r\n}","import { CHANGE_THEME } from \"../types\"\r\n\r\nconst initialState = {\r\n  light: true\r\n}\r\n\r\nexport const themeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_THEME:\r\n      return {...state, light: !state.light}\r\n    default:\r\n      return state\r\n  }\r\n};\r\n","import { combineReducers } from 'redux'\r\nimport { effectReducer } from './effect/effectReducer'\r\nimport { themeReducer } from './theme/themeReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  theme: themeReducer,\r\n  effect: effectReducer\r\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./assets/sass/all.sass\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { compose, createStore } from \"redux\";\nimport { rootReducer } from \"./redux/rootReducer\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(rootReducer, compose(\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}